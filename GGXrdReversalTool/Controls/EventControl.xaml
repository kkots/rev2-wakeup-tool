<local:NotifiedUserControl x:Class="GGXrdReversalTool.Controls.EventControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:GGXrdReversalTool.Controls"
             xmlns:converters="clr-namespace:GGXrdReversalTool.Converters"
             x:Name="Control"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <local:NotifiedUserControl.Resources>
        <converters:ComboEventConverter x:Key="ComboEventConverter" />
        <DataTemplate x:Key="ComboDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource ComboEventConverter}">
                            <Binding Path="MinComboCount" ElementName="Control"/>
                            <Binding Path="MaxComboCount" ElementName="Control"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <Slider Grid.Row="1" Value="{Binding ElementName=Control, Path=MinComboCount}" Minimum="1" Maximum="{Binding ElementName=Control, Path=MaxComboCount}"/>
                <Slider Grid.Row="2" Value="{Binding ElementName=Control, Path=MaxComboCount}" Minimum="{Binding ElementName=Control, Path=MinComboCount}" Maximum="100"/>
            </Grid>
        </DataTemplate>
        <converters:AnimationEventConverter x:Key="AnimationEventConverter" />
        <DataTemplate x:Key="AnimationDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AnimationEventConverter}">
                            <Binding Path="ShouldCheckWakingUp" ElementName="Control"/>
                            <Binding Path="ShouldCheckWallSplat" ElementName="Control"/>
                            <Binding Path="ShouldCheckAirTech" ElementName="Control"/>
                            <Binding Path="ShouldCheckStartBlocking" ElementName="Control"/>
                            <Binding Path="ShouldCheckBlockstunEnding" ElementName="Control"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <WrapPanel Grid.Row="1">
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Margin" Value="5,5,5,5"/>
                        </Style>
                    </WrapPanel.Resources>
                    <CheckBox Content="Waking up" IsChecked="{Binding ElementName=Control, Path=ShouldCheckWakingUp}"/>
                    <CheckBox Content="Wallsplat recovering" IsChecked="{Binding ElementName=Control, Path=ShouldCheckWallSplat}"/>
                    <CheckBox Content="Air Teching" IsChecked="{Binding ElementName=Control, Path=ShouldCheckAirTech}"/>
                    <CheckBox Content="Start Blocking" IsChecked="{Binding ElementName=Control, Path=ShouldCheckStartBlocking}"/>
                    <CheckBox Content="Blockstun Ends" IsChecked="{Binding ElementName=Control, Path=ShouldCheckBlockstunEnding}"/>
                </WrapPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SimulatedRoundstartDataTemplate">
            <TextBlock TextWrapping="Wrap" Text="You recover from tapping Blitz Shield"/>
        </DataTemplate>
        <converters:DelayAirRecoveryEventConverter x:Key="DelayAirRecoveryEventConverter" />
        <DataTemplate x:Key="DelayAirRecoveryDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource DelayAirRecoveryEventConverter}">
                            <Binding Path="MinDelayAirRecoveryDelay" ElementName="Control"/>
                            <Binding Path="MaxDelayAirRecoveryDelay" ElementName="Control"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <Slider Grid.Row="1" Value="{Binding ElementName=Control, Path=MinDelayAirRecoveryDelay}" Minimum="0" Maximum="{Binding ElementName=Control, Path=MaxDelayAirRecoveryDelay}"/>
                <Slider Grid.Row="2" Value="{Binding ElementName=Control, Path=MaxDelayAirRecoveryDelay}" Minimum="{Binding ElementName=Control, Path=MinDelayAirRecoveryDelay}" Maximum="100"/>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock TextWrapping="Wrap" Text="Tech direction:" VerticalAlignment="Center"/>
                    <ComboBox Grid.Column="1" Margin="5,5,0,5" ItemsSource="{Binding ElementName=Control, Path=AirRecoveryTypesList}" SelectedValue="{Binding ElementName=Control, Path=SelectedAirRecoveryType}" VerticalAlignment="Center"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <converters:PeriodicEventConverter x:Key="PeriodicEventConverter" />
        <DataTemplate x:Key="PeriodicDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" TextWrapping="Wrap">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource PeriodicEventConverter}">
                            <Binding Path="MinPeriodic" ElementName="Control"/>
                            <Binding Path="MaxPeriodic" ElementName="Control"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <Slider Grid.Row="1" Value="{Binding ElementName=Control, Path=MinPeriodic}" Minimum="1" Maximum="{Binding ElementName=Control, Path=MaxPeriodic}"/>
                <Slider Grid.Row="2" Value="{Binding ElementName=Control, Path=MaxPeriodic}" Minimum="{Binding ElementName=Control, Path=MinPeriodic}" Maximum="360"/>
                <CheckBox Grid.Row="3" Content="Only when opponent is idle" IsChecked="{Binding ElementName=Control, Path=PeriodicallyOnlyWhenIdle}"/>
            </Grid>
        </DataTemplate>
        <local:EventControlDataTemplateSelector x:Key="EventControlDataTemplateSelector" ComboDataTemplate="{StaticResource ComboDataTemplate}" AnimationDataTemplate="{StaticResource AnimationDataTemplate}" SimulatedRoundstartDataTemplate="{StaticResource SimulatedRoundstartDataTemplate}" DelayAirRecoveryDataTemplate="{StaticResource DelayAirRecoveryDataTemplate}" PeriodicDataTemplate="{StaticResource PeriodicDataTemplate}" />
        <converters:ScenarioEventTypeToStringConverter x:Key="ScenarioEventTypeToStringConverter" />
    </local:NotifiedUserControl.Resources>
    <GroupBox Header="When">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ComboBox ItemsSource="{Binding ElementName=Control, Path=ActionTypes, Converter={StaticResource ScenarioEventTypeToStringConverter}}" SelectedValue="{Binding ElementName=Control, Path=SelectedScenarioEvent, Converter={StaticResource ScenarioEventTypeToStringConverter}}" VerticalAlignment="Center" Margin="0,5,0,5"/>
            <ContentControl Grid.Row="1" Content="{Binding ElementName=Control, Path=SelectedScenarioEvent}" ContentTemplateSelector="{StaticResource EventControlDataTemplateSelector}"/>
        </Grid>
        
    </GroupBox>
</local:NotifiedUserControl>
